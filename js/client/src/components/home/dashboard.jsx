'use strict';

/**
 * This notation was generated by templates.
 * // -------------------------------------------------
 * GLOBAL FILE NOTATIONS
 * Project of: fix
 * Filename: dashboard.jsx by jimmie
 * Created: 2017-05-29 @ 15:16
 * Product of: WebStorm
 * // -------------------------------------------------
 * Make sure this file is part of its proper namespace
 * and project before moving on.
 * // -------------------------------------------------
 * Code-tags conventionally should be used (See below) :
 * TODO - Something that someone need to do.
 * DOING - Self remind for what you are doing.
 * CONSIDER - Reminder to consider a change or addition.
 * BUG - The below section of a code cause a bug.
 * FIXME - The below section of code need to be fixed.
 * HACK - The below section of code is a workaround.
 * XXX - Any notation important enough to consider implementing.
 * CLARIFY - Very incomprehensible section of code below.
 *
 * Created by jimmie on (2017-05-29).
 *
 * Repository link: http://jimmie@gitlab.localdomain/connectiontool/fix.git
 */


/**
 * DOING: Import react and associated libraries
 * here to separate from the rest of the code.
 */
import React from 'react';


/**
 * DOING: Import react components here
 * to separate from the rest of the code.
 */
import DashboardCircularProgress from './dashboard-circular-progress.jsx';


/**
 * DOING: Import app associated and universal libraries
 * here to separate from the rest of the code.
 */
import * as language from '../../constants/language/swedish';

// time to build sockets for realtime updates

const Dashboard = props => {

    const columnOne = {
        render : {
            label : language.DASHBOARD_CIRCULAR_PROGRESS_COLUMN_ONE_TITLE,
            radius : 85,
            stroke : 13,
            percentage : 25,
            backgroundStrokeColor : '#bae4dc',
            fillColor : 'none',
            foregroundStrokeColor : '#4cc9ac',
            foregroundColor : '#fff',
            labelColor : '#222',
        },
        data : {
            id : 'DashboardCircularProgress-1'
        }
    };
    const columnTwo = {
        render : {
            label : language.DASHBOARD_CIRCULAR_PROGRESS_COLUMN_TWO_TITLE,
            radius : 85,
            stroke : 13,
            percentage : 44,
            backgroundStrokeColor : 'rgb(228, 186, 221)',
            fillColor : 'none',
            foregroundStrokeColor : 'rgb(234, 98, 150)',
            foregroundColor : '#fff',
            labelColor : '#222',
        },
        data : {
            id : 'DashboardCircularProgress-2'
        }
    };
    const columnThree = {
        render : {
            label : language.DASHBOARD_CIRCULAR_PROGRESS_COLUMN_THREE_TITLE,
            radius : 85,
            stroke : 13,
            percentage : 15,
            backgroundStrokeColor : 'rgb(255, 250, 201)',
            fillColor : 'none',
            foregroundStrokeColor : 'rgb(254, 178, 115)',
            foregroundColor : '#fff',
            labelColor : '#222',
        },
        data : {
            id : 'DashboardCircularProgress-3'
        }
    };

    return (
        <div style={{display:'flex', flexWrap:'wrap', justifyContent:'space-around'}}>
            <DashboardCircularProgress id={columnOne.data.id} render={columnOne.render} />
            <DashboardCircularProgress id={columnTwo.data.id} render={columnTwo.render} />
            <DashboardCircularProgress id={columnThree.data.id} render={columnThree.render} />
        </div>
    )
};

export default Dashboard;