'use strict';

/**
 * This notation was generated by templates.
 * // -------------------------------------------------
 * GLOBAL FILE NOTATIONS
 * Project of: fix
 * Filename: connection-status-list.jsx by jimmie
 * Created: 2017-05-16 @ 15:16
 * Product of: WebStorm
 * // -------------------------------------------------
 * Make sure this file is part of its proper namespace
 * and project before moving on.
 * // -------------------------------------------------
 * Code-tags conventionally should be used (See below) :
 * TODO - Something that someone need to do.
 * DOING - Self remind for what you are doing.
 * CONSIDER - Reminder to consider a change or addition.
 * BUG - The below section of a code cause a bug.
 * FIXME - The below section of code need to be fixed.
 * HACK - The below section of code is a workaround.
 * XXX - Any notation important enough to consider implementing.
 * CLARIFY - Very incomprehensible section of code below.
 *
 * Created by jimmie on (2017-06-16).
 *
 * Repository link: http://jimmie@gitlab.localdomain/connectiontool/fix.git
 */

/**
 * DOING: Import react and associated libraries
 * here to separate from the rest of the code.
 */
import React from 'react';


/**
 * DOING: Import app associated and universal libraries
 * here to separate from the rest of the code.
 */
import {
    propsAreSet,
    isLoading
} from '../..//lib/common-state.js';


/**
 * DOING: Import custom components and stateless helpers
 * here to separate from the rest of the code.
 */
import ConnectionStatusItem from './connection-status-item.jsx';

/**
 * DOING: Import material ui and interface
 * here to separate from the rest of the code.
 */
import {
    List,
} from 'material-ui/List';

const ConnectionStatusList = props => {

    (propsAreSet(props)) ? isLoading(false) : isLoading(true);

    return (
        <div>
            <List>
                {
                    Object.keys(props.network.byName).map(function(address, index) {
                        return <ConnectionStatusItem
                            index={index}
                            key={props.network.byName[address].id}
                            alive={props.network.byName[address].alive}
                            address={props.network.byName[address].address}
                            values={props.network.byName[address]}

                        />
                    })
                }
            </List>
        </div>
    )
};

export default ConnectionStatusList;