'use strict';

/**
 * This notation was generated by templates.
 * // -------------------------------------------------
 * GLOBAL FILE NOTATIONS
 * Project of: memory
 * Filename: common-socket.js by jimmie
 * Created: 2017-05-31 @ 15:16
 * Product of: WebStorm
 * // -------------------------------------------------
 * Make sure this file is part of its proper namespace
 * and project before moving on.
 * // -------------------------------------------------
 * Code-tags conventionally should be used (See below) :
 * TODO - Something that someone need to do.
 * DOING - Self remind for what you are doing.
 * CONSIDER - Reminder to consider a change or addition.
 * BUG - The below section of a code cause a bug.
 * FIXME - The below section of code need to be fixed.
 * HACK - The below section of code is a workaround.
 * XXX - Any notation important enough to consider implementing.
 * CLARIFY - Very incomprehensible section of code below.
 *
 * Created by jimmie on (2017-05-31).
 *
 * Repository link: https://github.com/jimmiehansson/memory.git
 */


/**
 * DOING: Import required node libraries
 * here to separate from the rest of the code.
 */
const io = require('socket.io-client');


/**
 * DOING: Import universal and associated libraries
 * here to separate from the rest of the code.
 */
import {
    isString,
    isObject,
} from './common-type';

/**
 * DOING: Socket host with options
 * should establish a connection.
 * Emits message on return.
 * @param socketHost
 * @param options
 * @returns {object}
 */
export const connectToSocket = ( socketHost, {...options} ) => {
    if(isString(socketHost) && isObject(options)){
        let socket = io.connect(socketHost, options).on('connect', () => {
           socket.emit('connected');
        });
        return socket;
    }
};

/**
 * DOING: Should return an object
 * of the disconnect event from the socket.
 * @param socket
 */
export const disconnectFromSocket = (socket) => isObject(socket) && socket.disconnect();