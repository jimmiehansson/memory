'use strict';


/**
 * This notation was generated by templates.
 * // -------------------------------------------------
 * GLOBAL FILE NOTATIONS
 * Project of: memory
 * Filename: tile.js by jimmie
 * Created: 2017-05-31 @ 14:54
 * Product of: Webstorm
 * // -------------------------------------------------
 * Make sure this file is part of its proper namespace
 * and project before moving on.
 * // -------------------------------------------------
 * Code-tags conventionally should be used (See below) :
 * TODO - Something that someone need to do.
 * DOING - Self remind for what you are doing.
 * CONSIDER - Reminder to consider a change or addition.
 * BUG - The below section of a code cause a bug.
 * FIXME - The below section of code need to be fixed.
 * HACK - The below section of code is a workaround.
 * XXX - Any notation important enough to consider implementing.
 * CLARIFY - Very incomprehensible section of code below.
 *
 * Created by jimmie on (2017-05-31).
 *
 * Repository link: https://github.com/jimmiehansson/memory.git
 */


/**
 * DOING: Import react and associated libraries
 * here to separate from the rest of the code.
 */
import { createSelector } from 'reselect';


/**
 * DOING: State should be fetched prior
 * to executing the selector functions.
 * @param state
 */
export const getSessions = state => state.board.sessions;
export const getActiveGame = state => state.board.activeGame;
export const getTotalGames = state => state.board.totalGames;
export const getScore = state => state.board.score;


/**
 * DOING: Should return a cursor
 * for the current sessions stored in state.
 */
export const sessionsSelector = createSelector([ getSessions ], (board) => board);


/**
 * DOING: Should return a cursor
 * for the current active game stored in state.
 */
export const activeGameSelector = createSelector([ getActiveGame ], (board) => board);


/**
 * DOING: Should return a cursor
 * for the current total games stored in state.
 */
export const totalGamesSelector = createSelector([ getTotalGames ], (board) => board);


/**
 * DOING: Should return a cursor
 * for the current score stored in state.
 */
export const scoreSelector = createSelector([ getScore ], (board) => board);

